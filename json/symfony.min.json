{"sections":[{"title":"Démarrage d'un Projet","items":[{"title":"Créer un nouveau projet","commands":[{"label":"Pour créer un nouveau projet, on peut faire appel à l’utilitaire Symfony CLI en précisant une version 'long time suppport'","code":"symfony new nomProjet --version=lts --webapp"},{"label":"... ou en précisant une version particulière  :","code":"symfony new nomProjet --version=\"6.4.*\" --webapp"},{"label":"On peut aussi utiliser composer"},{"label":"On crée alors un projet :","code":"composer create-project symfony/skeleton:\"6.4.*\" nomProjet"},{"label":"On va dans le dossier spécifique","code":"cd nomProjet"},{"label":"et on ajoute webapp :","code":"composer require webapp"}]},{"title":"Ajouter Apache","commands":[{"label":"Dans ce cours, nous avons utilisé apache. Pour l'ajouter au projet, entrez la commande suivante.","code":"composer require symfony/apache-pack"}]},{"title":"Vérifier les vulnérabilités","commands":[{"label":"Il est possible de vérifier les vulnérabilités des dépendances, avec Symfony CLI :","code":"symfony check:security"}]},{"title":"Vérifier les pré-requis","commands":[{"label":"Il est possible de vérifier les pré-requis pour chaque dépendance, avec Symfony CLI :","code":"symfony check:requirements"}]},{"title":"Visualiser les versions PHP","commands":[{"label":"Pour visualiser les version de PHP, vous pouvez entrer la commande suivante, avec Symfony CLI :","code":"symfony local:php:list"}]},{"title":"Lancer l’application","commands":[{"label":"Vous pouvez lancer l'application depuis la console en écrivant, avec Symfony CLI :","code":"symfony open:local"}]},{"title":"Afficher les logs","commands":[{"label":"Afin d'afficher les logs, vous pouvez entrer la commande suivante.","code":"php bin/console server:log"},{"label":"ou avec Symfony CLI :","code":"symfony server:log"}]}]},{"title":"Gestion des contrôleurs","items":[{"title":"Créer d'un Contrôleur","commands":[{"label":"Les contrôleurs sont liés aux routes définies dans l'application. Lorsqu'une requête HTTP est envoyée à une route, Symfony recherche le contrôleur associé à cette route et appelle la méthode appropriée. Ils contiennent des méthodes qui gèrent les actions associées aux routes. Ces méthodes sont appelées lorsque la route est visitée.Ils peuvent récupérer et manipuler des données à partir de diverses sources, telles que des bases de données, des fichiers, des sessions, etc. Ils peuvent générer des réponses HTTP, telles que des pages HTML, des fichiers, des erreurs, etc."},{"label":"Vous pouvez créer un contrôleur de cette manière :","code":"php bin/console make:controller NomDuControleur"}]},{"title":"Annoter les routes","commands":[{"label":"Définissez une route pour une méthode de contrôleur avec l'annotation `#[Route]` :","code":["use Symfony\\Component\\Routing\\Annotation\\Route;","","class ProductController extends AbstractController","{","    #[Route('/products', name: 'product_index')]","    public function index(): Response","    {","        // ...","    }","}"]}]},{"title":"Créer une méthode `index`","commands":[{"label":"Exemple de méthode `index` pour afficher une liste de produits :","code":["use Symfony\\Component\\HttpFoundation\\Response;","","class ProductController extends AbstractController","{","    #[Route('/products', name: 'product_index')]","    public function index(): Response","    {","        // Récupération de tous les produits","        $products = $this->getDoctrine()","            ->getRepository(Product::class)","            ->findAll();","","        // Rendu de la vue","        return $this->render('product/index.html.twig', [","            'products' => $products,","        ]);","    }","}"]}]},{"title":"Créer une méthode `show`","commands":[{"label":"Exemple de méthode `show` pour afficher les détails d'un produit spécifique :","code":["use Symfony\\Component\\HttpFoundation\\Response;","","class ProductController extends AbstractController","{","    #[Route('/products/{id}', name: 'product_show')]","    public function show(int $id): Response","    {","        // Récupération du produit par ID","        $product = $this->getDoctrine()","            ->getRepository(Product::class)","            ->find($id);","","        if (!$product) {","            throw $this->createNotFoundException('Produit non trouvé');","        }","","        // Rendu de la vue","        return $this->render('product/show.html.twig', [","            'product' => $product,","        ]);","    }","}"]}]},{"title":"Créer une méthode `create`","commands":[{"label":"Exemple de méthode `create` pour ajouter un nouveau produit :","code":["use Symfony\\Component\\HttpFoundation\\Request;","use Symfony\\Component\\HttpFoundation\\Response;","use Symfony\\Component\\Routing\\Annotation\\Route;","","class ProductController extends AbstractController","{","    #[Route('/products/new', name: 'product_create')]","    public function create(Request $request): Response","    {","        $product = new Product();","","        // Formulaire","        $form = $this->createForm(ProductType::class, $product);","        $form->handleRequest($request);","","        if ($form->isSubmitted() && $form->isValid()) {","            $entityManager = $this->getDoctrine()->getManager();","            $entityManager->persist($product);","            $entityManager->flush();","","            return $this->redirectToRoute('product_index');","        }","","        // Rendu de la vue","        return $this->render('product/create.html.twig', [","            'form' => $form->createView(),","        ]);","    }","}"]}]},{"title":"Créer une méthode `delete`","commands":[{"label":"Exemple de méthode `delete` pour supprimer un produit :","code":["use Symfony\\Component\\HttpFoundation\\Request;","use Symfony\\Component\\HttpFoundation\\Response;","use Symfony\\Component\\Routing\\Annotation\\Route;","","class ProductController extends AbstractController","{","    #[Route('/products/delete/{id}', name: 'product_delete')]","    public function delete(int $id, Request $request): Response","    {","        $entityManager = $this->getDoctrine()->getManager();","        $product = $entityManager->getRepository(Product::class)->find($id);","","        if (!$product) {","            throw $this->createNotFoundException('Produit non trouvé');","        }","","        $entityManager->remove($product);","        $entityManager->flush();","","        return $this->redirectToRoute('product_index');","    }","}"]}]}]},{"title":"Utilisation des entités","items":[{"title":"Créer une Entité","commands":[{"label":"Utilisez la commande suivante pour générer une entité :","code":"php bin/console make:entity"},{"label":"Étapes de création :","code":["1. Nommer l'entité. Par exemple : `Product`.","2. Ajouter des propriétés. Par exemple : `name`, `price`, etc.","3. Symfony générera automatiquement le fichier PHP correspondant dans le dossier `src/Entity`."]}]},{"title":"Définir les types de variables","commands":[{"label":"Vous pouvez définir divers types de propriétés dans votre entité :"},{"label":"1) Une chaîne de caractères","code":"@ORM\\Column(type=\"string\", length=255)"},{"label":"2) Un entier","code":"@ORM\\Column(type=\"integer\")"},{"label":"3) Un nombre à virgule flottante","code":"@ORM\\Column(type=\"float\")"},{"label":"4) Un booléen","code":"@ORM\\Column(type=\"boolean\")"},{"label":"5) Une date et heure","code":"@ORM\\Column(type=\"datetime\")"},{"label":"6) Un texte long","code":"@ORM\\Column(type=\"text\")"}]},{"title":"Générer une clef primaire (id)","commands":[{"label":"Définir une clé primaire (ID) pour votre entité :","code":["@ORM\\Id","@ORM\\GeneratedValue(strategy=\"AUTO\")","@ORM\\Column(type=\"integer\")","private $id;"]}]},{"title":"Créer une relation","commands":[{"label":"Définir des relations entre les entités :","code":["@ORM\\OneToOne(targetEntity=\"User\") // Une entité possède une autre entité","@ORM\\ManyToMany(targetEntity=\"Tag\") // Plusieurs produits peuvent avoir plusieurs tags"]},{"label":"1) Plusieurs produits peuvent appartenir à une catégorie","code":"@ORM\\ManyToOne(targetEntity=\"Category\")"},{"label":"2) Une catégorie a plusieurs produits","code":"@ORM\\OneToMany(targetEntity=\"Product\", mappedBy=\"category\")"}]}]},{"title":"Utilisation de repository","items":[{"title":"Créer un repository","commands":[{"label":"Les repository sont générés dans le dossier `src/Repository en même temps que les entités dont elles dépendent. Une entité est associé à un repository. Vous pouvez les générer avec cette commande.","code":"php bin/console make:entity"},{"label":"Ajoutez le namespace pour le repository","code":"namespace App\\Repository;"},{"label":"Exemple simple de repository pour l'entité `Product` :","code":["use App\\Entity\\Product;","use Doctrine\\Bundle\\DoctrineBundle\\Repository\\ServiceEntityRepository;","use Doctrine\\Persistence\\ManagerRegistry;","","class ProductRepository extends ServiceEntityRepository","{","    public function __construct(ManagerRegistry $registry)","    {","        parent::__construct($registry, Product::class);","    }","","    public function findByPriceGreaterThan(float $price)","    {","        return $this->createQueryBuilder('p')","            ->andWhere('p.price > :price')","            ->setParameter('price', $price)","            ->orderBy('p.price', 'ASC')","            ->getQuery()","            ->getResult();","    }","}"]}]},{"title":"Utiliser un repository","commands":[{"label":"Pour appeler un repository dans une entité, utilisez le constructeur pour injecter le repository dans la classe :","code":["namespace App\\Entity;","","use Doctrine\\ORM\\Mapping as ORM;","use App\\Repository\\ProductRepository;","","class SomeService","{","    private $productRepository;","","    public function __construct(ProductRepository $productRepository)","    {","        $this->productRepository = $productRepository;","    }","","    public function someMethod()","    {","        $product = $this->productRepository->find($id);","        // Effectuer des opérations sur $product","    }","}"]}]},{"title":"Utiliser les méthodes du repository","commands":[{"label":"Les repository possèdent différentes méthodes auxquelles on peut faire appel."},{"label":"1) Trouver tous les enregistrements :","code":"$repository->findAll();"},{"label":"2) Trouver un enregistrement par ID :","code":"$repository->find($id);"},{"label":"3) Trouver des enregistrements par critère :","code":"$repository->findBy(['field' => 'value']);"},{"label":"4) Trouver un enregistrement par critère :","code":"$repository->findOneBy(['field' => 'value']);"},{"label":"5) Trouver des enregistrements en utilisant des critères, l'ordre, la limite et l'offset :","code":"$repository->findBy(['field' => 'value'], ['field' => 'ASC'], 10, 20);"},{"label":"6) Compter le nombre d'enregistrements par critère :","code":"$repository->count(['field' => 'value']);"},{"label":"7) Trouver les valeurs distinctes pour un champ :","code":"$repository->findDistinctByField('field');"},{"label":"8) Trouver en utilisant une requête personnalisée","code":["// Requêtes DQL pour des besoins spécifiques","$dql = \"SELECT p FROM App\\Entity\\Product p WHERE p.price > 100\";","$query = $this->getEntityManager()->createQuery($dql);","$results = $query->getResult();"]}]},{"title":"Personnaliser une requêtes","commands":[{"label":"Voici un exemple. Cette requête trouve tous les produits appartenant à une catégorie spécifique, triés par prix croissant.","code":["public function findProductsByCategory($categoryId) {","    return $this->createQueryBuilder('p')","        ->where('p.category = :category')","        ->setParameter('category', $categoryId)","        ->orderBy('p.price', 'ASC')","        ->getQuery()","        ->getResult();","}"]},{"label":"Utiliser `where` pour ajouter une condition :","code":"  $qb->where('p.category = :category');"},{"label":"Utiliser `andWhere` pour ajouter une condition supplémentaire avec AND :","code":"  $qb->andWhere('p.price <= :maxPrice');"},{"label":"Utiliser `orWhere` pour ajouter une condition avec OR :","code":"  $qb->orWhere('p.price >= :minPrice');"},{"label":"Utiliser `orderBy` pour trier les résultats :","code":"  $qb->orderBy('p.price', 'ASC');"},{"label":"Utiliser `groupBy` pour grouper les résultats :","code":"  $qb->groupBy('p.category');"},{"label":"Utiliser `having` pour ajouter une condition sur les résultats groupés :","code":"  $qb->having('COUNT(p.id) > 5');"},{"label":"Utiliser `join` pour ajouter une jointure :","code":"  $qb->join('p.category', 'c');"},{"label":"Utiliser `leftJoin` pour ajouter une jointure à gauche :","code":"  $qb->leftJoin('p.category', 'c');"},{"label":"Utiliser `innerJoin` pour ajouter une jointure interne :","code":"  $qb->innerJoin('p.category', 'c');"},{"label":"Utiliser `setFirstResult` pour définir l'offset :","code":"  $qb->setFirstResult(10);"},{"label":"Utiliser `setMaxResults` pour définir la limite :","code":"  $qb->setMaxResults(20);"},{"label":"Utiliser `setParameter` pour lier un paramètre :","code":"  $qb->setParameter('category', $categoryId);"}]},{"title":"Utiliser le DQL","commands":[{"label":"Le DQL (Doctrine Query Language) est utilisé pour écrire des requêtes plus complexes :","code":["$dql = \"SELECT s FROM App\\Entity\\Serie AS s","WHERE s.popularity > 200","ORDER BY s.vote DESC\";","$query = $em->createQuery($dql);"]}]},{"title":"Spécifier une hydratation.","commands":[{"label":"Les méthodes de repository retournent généralement des objets entité. Vous pouvez spécifier le type d'hydratation si nécessaire :","code":["$query->getResult(); // Par défaut, retourne des objets entité","$query->getArrayResult(); // Retourne les résultats sous forme de tableaux associatifs","$query->getScalarResult(); // Retourne les résultats sous forme de tableaux scalaires"]}]},{"title":"Paginer avec Paginator","commands":[{"label":"Utilisez le `Paginator` pour paginer les résultats d'une requête :","code":["use Doctrine\\ORM\\Tools\\Pagination\\Paginator;","","public function findPaginatedProducts(int $page, int $limit) {","    $qb = $this->createQueryBuilder('p')","        ->setFirstResult(($page - 1) * $limit)","        ->setMaxResults($limit);","","    $query = $qb->getQuery();","    $paginator = new Paginator($query);","    return $paginator;","}"]}]},{"title":"Utiliser EntityManagerInterface","commands":[{"label":"L'Entity Manager est utilisé pour gérer les entités et effectuer des opérations sur la base de données :","code":["use Doctrine\\ORM\\EntityManagerInterface;","","// Injection de l'Entity Manager dans un service ou un contrôleur","class ProductService","{","    private $entityManager;","","    public function __construct(EntityManagerInterface $entityManager)","    {","        $this->entityManager = $entityManager;","    }","","    public function saveProduct(Product $product): void","    {","        // Persiste l'entité dans la base de données","        $this->entityManager->persist($product);","        $this->entityManager->flush();","    }","","    public function deleteProduct(Product $product): void","    {","        // Supprime l'entité de la base de données","        $this->entityManager->remove($product);","        $this->entityManager->flush();","    }","}"]}]},{"title":"Utiliser les transactions (A CONFIRMER !)","commands":[{"label":"Utilisez les transactions pour garantir l'intégrité des données lors de multiples opérations :","code":["$this->entityManager->beginTransaction();","try {","    // Opérations de persistance","    $this->entityManager->persist($entity1);","    $this->entityManager->persist($entity2);","    $this->entityManager->flush();","","    // Validation de la transaction","    $this->entityManager->commit();","} catch (Exception $e) {","    // Annulation de la transaction en cas d'erreur","    $this->entityManager->rollback();","    throw $e;","}"]}]}]},{"title":"Validation des données","items":[{"title":"NotBlank","commands":[{"label":"Assure que le champ n'est pas vide :","code":["@Assert\\NotBlank(message=\"Ce champ ne peut pas être vide.\")","private $name;"]}]},{"title":"Length","commands":[{"label":"Contrôle la longueur minimale et/ou maximale d'une chaîne :","code":["@Assert\\Length(","    min=3,","    max=255,","    minMessage=\"La longueur minimale est de 3 caractères.\",","    maxMessage=\"La longueur maximale est de 255 caractères.\"",")","private $description;"]}]},{"title":"Positive","commands":[{"label":"Assure que la valeur est positive (supérieure à zéro) :","code":["@Assert\\Positive(message=\"La valeur doit être positive.\")","private $price;"]}]},{"title":"Range","commands":[{"label":"Vérifie que la valeur se situe dans une plage donnée :","code":["@Assert\\Range(","    min=1,","    max=100,","    notInRangeMessage=\"La valeur doit être comprise entre 1 et 100.\"",")","private $quantity;"]}]},{"title":"Email","commands":[{"label":"Valide que le champ est une adresse email valide :","code":["@Assert\\Email(message=\"L'email '{{ value }}' n'est pas valide.\")","private $email;"]}]},{"title":"Date","commands":[{"label":"Assure que le champ est une date valide :","code":["@Assert\\Date(message=\"La date '{{ value }}' n'est pas valide.\")","private $birthDate;"]}]},{"title":"Unique","commands":[{"label":"Vérifie que la valeur est unique dans la base de données :","code":["@UniqueEntity(","    fields=\"email\",","    message=\"Cet email est déjà utilisé.\"",")","private $email;"]}]},{"title":"Choice","commands":[{"label":"Assure que la valeur fait partie d'un ensemble de choix prédéfinis :","code":["@Assert\\Choice(","    choices={\"low\", \"medium\", \"high\"},","    message=\"Choisissez une priorité valide parmi 'low', 'medium', ou 'high'.\",","    multiple=true,","    min=1,","    max=3,",")","private $priority;"]}]},{"title":"Regex","commands":[{"label":"Valide que la valeur correspond à un pattern regex :","code":["@Assert\\Regex(","    pattern=\"/^[a-zA-Z0-9]+$/\",","    message=\"Le champ doit contenir uniquement des lettres et des chiffres.\",","    match=true,",")","private $username;"]}]},{"title":"Ajouter un Group","commands":[{"label":"Valide que la valeur correspond à un pattern regex :","code":["@Assert\\NotBlank(","    message=\"Ce champ ne peut pas être vide.\",","    groups={\"Default\", \"CustomGroup\"}",")","private $name;"]}]}]},{"title":"Création de routes","items":[{"title":"Nommer une route","commands":[{"label":"Afin de créer une route en Symfony, vous pouvez écrire la route suivante. A gauche on utilise l'url relative pour accéder à la ressource. A droite, il y a le nom de la route. C'est ce nom là que l'on utilise avec la fonction path du côté Twig. On renvoie le nom de la vue dans la fonction render().","code":["#[Route('/products/detail/{id}', name: 'product_detail')]","public function detail(int $id): Response {","  return $this->render('main/home.html.twig');","}"]}]},{"title":"Utiliser un joker","commands":[{"label":"Les jokers sont des symboles comme {id} utilisés dans les routes ou les traductions pour marquer des emplacements où des valeurs variables seront insérées plus tard.","code":["#[Route('/utilisateurs/profils/{id}', requirements: ['id'=>'\\d+'])]","public function userProfile(int $id): Response {","    // Votre logique ici","}"]}]},{"title":"Débogguer une route","commands":[{"label":"Pour débogguer une route, vous pouvez entrer la commande suivant dans la console :","code":"php bin/console debug:router"},{"label":"...ou avec Symfony CLI :","code":"symfony console debug:router"}]},{"title":"Détailler une route","commands":[{"label":"Pour afficher les détails d'une route spécifique, veuillez entrer la console suivante :","code":"php bin/console debug:router nomDeLaRoute"},{"label":"...ou avec Symfony CLI :","code":"symfony console debug:router nomDeLaRoute"}]},{"title":"Tester une route","commands":[{"label":"Pour tester le match entre une URL et une route","code":"php bin/console router:match /url-a-tester"},{"label":"...ou avec Symfony CLI :","code":"symfony console router:match /url-a-tester"}]},{"title":"Générer une URL pour une route","commands":[{"label":"Vous pouvez utiliser `path` dans Twig pour générer une URL relative à partir du nom de la route.","code":["{# Générer une URL relative #}","<a href=\"{{ path('product_detail', {'id': 123}) }}\">Voir le produit</a>"]},{"label":"... ou utiliser `url` pour générer une route absolue.","code":["{# Générer une URL absolue #}","<a href=\"{{ url('product_detail', {'id': 123}) }}\">Voir le produit</a>"]}]},{"title":"Ajouter des paramètres optionnels","commands":[{"label":"Vous pouvez construire des routes, vous pouvez utiliser des paramètres optionnels. Pour ce faire, il faut inscrire des valeurs par défaut.","code":["use Symfony\\Component\\Routing\\Annotation\\Route;","","#[Route('/products/{category}/{page}', name: 'product_list', defaults: ['category' => 'all', 'page' => 1])]","public function list(string $category = 'all', int $page = 1): Response {","    // Votre logique ici","}"]}]},{"title":"Préfixer de route","commands":[{"label":"Pour organiser les routes sous un chemin commun, il est nécessaire d'ajouter un préfexe au-dessus de la classe. En premier paramètre se trouve le \"préfixe\" de l'url, et en second paramètre se situe le préfixe pour le nom du chemin.","code":["use Symfony\\Component\\Routing\\Annotation\\Route;","","#[Route('/admin', name: 'admin_')]","class AdminController {","","    #[Route('/dashboard', name: 'dashboard')]","    public function dashboard(): Response {","        // Route complète: /admin/dashboard","    }","","    #[Route('/users', name: 'users')]","    public function users(): Response {","        // Route complète: /admin/users","    }","}"]}]},{"title":"Rediriger une route","commands":[{"label":"Il est tout aussi possible de rediriger une URL vers une autre route ou URL.","code":["use Symfony\\Component\\Routing\\Annotation\\Route;","","#[Route('/old-path', name: 'old_path')]","public function oldPath(): Response {","    return $this->redirectToRoute('new_path');","}","","#[Route('/new-path', name: 'new_path')]","public function newPath(): Response {","    // Nouvelle logique ici","}"]}]},{"title":"Utiliser les méthodes HTTP","commands":[{"label":"Vous pouvez limiter les routes à certaines méthodes HTTP (GET, POST, etc.).","code":["use Symfony\\Component\\Routing\\Annotation\\Route;","","#[Route('/submit', name: 'form_submit', methods: ['POST'])]","public function submit(): Response {","    // Logique de soumission de formulaire","}"]}]},{"title":"Générer des routes dans PHP","commands":[{"label":"Vous pouvez utiliser le générateur de routes Symfony dans les contrôleurs PHP.","code":["use Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;","","public function generateUrlExample(UrlGeneratorInterface $urlGenerator): Response {","    $url = $urlGenerator->generate('product_detail', ['id' => 123]);","    // Utiliser $url comme URL générée","}"]}]},{"title":"Grouper des routes","commands":[{"label":"Organiser des routes similaires en groupes avec des préfixes ou des options partagées.","code":["use Symfony\\Component\\Routing\\Annotation\\Route;","","#[Route('/blog')]","class BlogController {","","    #[Route('/list', name: 'blog_list')]","    public function list(): Response {","        // Route complète: /blog/list","    }","","    #[Route('/post/{id}', name: 'blog_post')]","    public function post(int $id): Response {","        // Route complète: /blog/post/{id}","    }","}"]}]},{"title":"Conditionner des routes","commands":[{"label":"Si vous souhaitez contraindre vos routes à certains conditions, vous pouvez utiliser la structure suivante.","code":["use Symfony\\Component\\Routing\\Annotation\\Route;","","#[Route('/special/{id}', name: 'special', condition: 'params[\"id\"] > 10')]","public function special(int $id): Response {","    // Cette route est matchée seulement si l'id est supérieur à 10.","}"]}]},{"title":"Définir des routes avec des hôtes et des schémas spécifiques","commands":[{"label":"Vous pouvez définir des routes avec des schémas HTTPS...","code":["#[Route('/secure', name: 'secure_page', schemes: ['https'])]","public function secure(): Response {","    // Cette route est accessible seulement via HTTPS.","}",""]},{"label":"...ou définir des routes avec des hôtes spécifiques","code":["","#[Route('/subdomain', name: 'subdomain_page', host: 'sub.example.com')]","public function subdomain(): Response {","    // Cette route est accessible seulement via le sous-domaine spécifié.","}"]}]},{"title":"Préfixer pour des langues","commands":[{"label":"Configurer des routes avec des préfixes de langues pour les applications multilingues.","code":["use Symfony\\Component\\Routing\\Annotation\\Route;","","#[Route('/{_locale}/about', name: 'about', requirements: ['_locale' => 'en|fr|es'])]","public function about(): Response {","    // Route disponible en plusieurs langues.","}"]}]},{"title":"Paramètrer des routes avec des regex","commands":[{"label":"Utiliser des expressions régulières pour contraindre les paramètres de route.","code":["use Symfony\\Component\\Routing\\Annotation\\Route;","","#[Route('/products/{name}', name: 'product_detail', requirements: ['name' => '[a-zA-Z]+'])]","public function detail(string $name): Response {","    // Cette route match seulement si le nom est composé de lettres majuscules ou minuscules.","}"]}]}]},{"title":"Utilisation des formulaires","items":[{"title":"Créer un Formulaire","commands":[{"label":"Pour créer un formulaire, utilisez la commande suivante :","code":"php bin/console make:form NomDuFormulaire"},{"label":"ou avec Symfony CLI :","code":"symfony console make:form NomDuFormulaire"},{"label":"Cette commande génère un fichier de type formulaire dans `src/Form/NomDuFormulaireType.php`."}]},{"title":"Définir les champs d'un formulaire","commands":[{"label":"Ajoutez les champs du formulaire dans la méthode `buildForm` :","code":["namespace App\\Form;","","use App\\Entity\\Product;","use Symfony\\Component\\Form\\AbstractType;","use Symfony\\Component\\Form\\FormBuilderInterface;","use Symfony\\Component\\OptionsResolver\\OptionsResolver;","use Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType;","use Symfony\\Component\\Form\\Extension\\Core\\Type\\MoneyType;","use Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType;","","class ProductType extends AbstractType","{","    public function buildForm(FormBuilderInterface $builder, array $options)","    {","        $builder","            ->add('name', TextType::class, ['label' => 'Nom du produit'])","            ->add('price', MoneyType::class, ['label' => 'Prix'])","            ->add('save', SubmitType::class, ['label' => 'Ajouter le produit']);","    }","","    public function configureOptions(OptionsResolver $resolver)","    {","        $resolver->setDefaults([","            'data_class' => Product::class,","        ]);","    }","}"]}]},{"title":"Utiliser un formulaire dans un contrôleur","commands":[{"label":"Gérez le formulaire dans un contrôleur pour traiter les soumissions :","code":["namespace App\\Controller;","","use App\\Entity\\Product;","use App\\Form\\ProductType;","use Symfony\\Component\\HttpFoundation\\Request;","use Symfony\\Component\\HttpFoundation\\Response;","use Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;","use Symfony\\Component\\Routing\\Annotation\\Route;","","class ProductController extends AbstractController","{","    #[Route('/products/new', name: 'product_new')]","    public function new(Request $request): Response","    {","        $product = new Product();","        $form = $this->createForm(ProductType::class, $product);","        $form->handleRequest($request);","","        if ($form->isSubmitted() && $form->isValid()) {","            $entityManager = $this->getDoctrine()->getManager();","            $entityManager->persist($product);","            $entityManager->flush();","","            return $this->redirectToRoute('product_index');","        }","","        return $this->render('product/new.html.twig', [","            'form' => $form->createView(),","        ]);","    }","}"]}]},{"title":"Construire un formulaire avec Twig","commands":[{"label":"Utilisez les fonctions Twig pour afficher le formulaire :","code":["{# product/new.html.twig #}","<h1>Ajouter un nouveau produit</h1>","{{ form_start(form) }}","    {{ form_row(form.name) }}","    {{ form_row(form.price) }}","    {{ form_row(form.save) }}","{{ form_end(form) }}"]}]},{"title":"Valider des données","commands":[{"label":"Les contraintes de validation sont appliquées automatiquement :","code":["{# Affiche les erreurs de validation au-dessus du champ #}","{{ form_errors(form.name) }}","{{ form_errors(form.price) }}"]},{"label":"On peut les retirer avec un 'required' => false :","code":["    public function configureOptions(OptionsResolver $resolver)","    {","        $resolver->setDefaults([","            'data_class' => Product::class,","            'required' => false","        ]);","    }"]}]},{"title":"Utiliser les fonctions Twig","commands":[{"label":"Démarrer le balisage du formulaire :","code":"{{ form_start(form) }} // Démarre le balisage du formulaire"},{"label":"Terminer le balisage du formulaire :","code":"{{ form_end(form) }} // Termine le balisage du formulaire"},{"label":"Afficher un champ entier (label, widget, erreurs) :","code":"{{ form_row(form.field) }} // Affiche un champ entier (label, widget, erreurs)"},{"label":"Afficher seulement le label du champ :","code":"{{ form_label(form.field) }} // Affiche seulement le label du champ"},{"label":"Afficher seulement le widget du champ :","code":"{{ form_widget(form.field) }} // Affiche seulement le widget du champ"},{"label":"Afficher seulement les erreurs du champ :","code":"{{ form_errors(form.field) }} // Affiche seulement les erreurs du champ"}]}]},{"title":"Utiliser les types de champ","items":[{"title":"TextType","commands":[{"label":"Créer un champ de texte simple avec diverses options :","code":["// Ajout d'un champ de type texte","->add('name', TextType::class, [","    // Étiquette affichée pour le champ","    'required' => true,","    // Attributs HTML pour personnaliser l'apparence et le comportement","    'attr' => [","        'maxlength' => 255, // Longueur maximale du texte","        'style' => 'width: 300px;', // Style CSS inline","        'autocomplete' => 'off' // Désactivation de l'autocomplétion","    ],","    // Contraintes de validation pour le champ","    'constraints' => [","        new NotBlank(), // Le champ ne doit pas être vide","        new Length(['min' => 2, 'max' => 255]) // Longueur minimale et maximale","    ]","])"]}]},{"title":"TextareaType","commands":[{"label":"Créer un champ de zone de texte avec options :","code":["// Ajout d'un champ de type zone de texte","->add('description', TextareaType::class, [","    // Étiquette affichée pour le champ","    'label' => 'Description',","    // Champ requis ou non","    'required' => false,","    // Attributs HTML pour personnaliser l'apparence et le comportement","    'attr' => [","        'rows' => 5, // Nombre de lignes visibles","        'cols' => 50, // Nombre de colonnes visibles","    ],","    // Contraintes de validation pour le champ","    'constraints' => [","        new Length(['max' => 1000]) // Longueur maximale","    ]","])"]}]},{"title":"EmailType","commands":[{"label":"Créer un champ de saisie pour email :","code":["// Ajout d'un champ de type email","->add('email', EmailType::class, [","    // Champ requis ou non","    'required' => true,","    // Contraintes de validation pour le champ","    'constraints' => [","        new NotBlank(), // Le champ ne doit pas être vide","        new Email() // Valide que le champ est un email","    ]","])"]}]},{"title":"PasswordType","commands":[{"label":"Créer un champ de saisie pour mot de passe :","code":["// Ajout d'un champ de type mot de passe","->add('password', PasswordType::class, [","    // Champ requis ou non","    'required' => true,","    // Contraintes de validation pour le champ","    'constraints' => [","        new NotBlank(), // Le champ ne doit pas être vide","        new Length(['min' => 8]) // Longueur minimale","    ]","])"]}]},{"title":"IntegerType","commands":[{"label":"Créer un champ pour saisie de nombre entier :","code":["// Ajout d'un champ de type entier","->add('quantity', IntegerType::class, [","    // Champ requis ou non","    'required' => true,","    // Attributs HTML pour personnaliser l'apparence et le comportement","    'attr' => [","        'min' => 1, // Valeur minimale","        'max' => 100, // Valeur maximale","    ],","    // Texte d'aide affiché sous le champ","    'constraints' => [","        new NotBlank(), // Le champ ne doit pas être vide","        new Positive() // La valeur doit être positive","    ]","])"]}]},{"title":"SearchType","commands":[{"label":"Créer un champ de recherche :","code":["// Ajout d'un champ de type recherche","->add('search', SearchType::class, [","    // Champ requis ou non","    'required' => false,","    // Attributs HTML pour personnaliser l'apparence et le comportement","])"]}]},{"title":"TelType","commands":[{"label":"Créer un champ de saisie pour numéro de téléphone :","code":["// Ajout d'un champ de type téléphone","->add('phone', TelType::class, [","    // Champ requis ou non","    'required' => true,","    // Contraintes de validation pour le champ","    'constraints' => [","        new NotBlank(), // Le champ ne doit pas être vide","        new Regex(['pattern' => '/^[0-9]{10}$/']) // Doit correspondre à un numéro de téléphone de 10 chiffres","    ]","])"]}]},{"title":"ChoiceType","commands":[{"label":"Créer un champ de choix (dropdown) :","code":["// Ajout d'un champ de type choix (dropdown)","->add('status', ChoiceType::class, [","    // Liste des choix possibles","    'choices' => [","        'Canceled' => 'canceled', // Option 'Canceled' avec valeur 'canceled'","        'Ended' => 'ended', // Option 'Ended' avec valeur 'ended'","        'Returning' => 'returning' // Option 'Returning' avec valeur 'returning'","    ],","])"]},{"label":"Créer un champ de choix (checkbox ou radio) :","code":["// Ajout d'un champ de type choix (checkbox ou radio)","->add('genres', ChoiceType::class, [","    // Liste des choix possibles","    'choices' => [","        'Western' => 'western', // Option 'Western' avec valeur 'western'","        'Comedy' => 'comedy', // Option 'Comedy' avec valeur 'comedy'","        'Romance' => 'romance', // Option 'Romance' avec valeur 'romance'","        'SF' => 'sf', // Option 'SF' avec valeur 'sf'","        'Fantasy' => 'fantasy', // Option 'Fantasy' avec valeur 'fantasy'","        'Action' => 'action' // Option 'Action' avec valeur 'action'","    ],","    // Affiche comme des boutons radio ou des cases à cocher","    'expanded' => true,","    // Permet la sélection multiple si true","    'multiple' => true,","])"]}]},{"title":"EntityType","commands":[{"label":"Créer un champ de sélection pour entité :","code":["// Utiliser l'entité Genre","use App\\Entity\\Genre;","// Utiliser EntityType pour créer un champ de formulaire basé sur une entité","use Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType;","","// Ajout d'un champ de type entité","->add('genre', EntityType::class, [","    // Classe de l'entité à utiliser","    'class' => Genre::class,","    // Propriété à afficher comme étiquette","    'choice_label' => 'name',","    // Texte par défaut lorsqu'aucun choix n'est sélectionné","    'placeholder' => 'Choose a genre',","])"]}]},{"title":"DateType","commands":[{"label":"Créer un champ de date avec widget :","code":["// Ajout d'un champ de type date avec widget","->add('startDate', DateType::class, [","    // Type de widget (single_text pour un champ de texte unique)","    'widget' => 'single_text',","    // Format d'affichage de la date","    'format' => 'yyyy-MM-dd',","])"]},{"label":"Créer un champ de date (format multiple) :","code":["// Ajout d'un champ de type date avec choix de format","->add('endDate', DateType::class, [","    // Type de widget (choice pour afficher des menus déroulants pour jour, mois, année)","    'widget' => 'choice',","    // Format d'affichage de la date","    'format' => 'dd-MM-yyyy',","    // Intervalle d'années pour les sélecteurs","    'years' => range(date('Y') - 10, date('Y') + 1),","])"]}]},{"title":"FileType","commands":[{"label":"Créer un champ de fichier avec validation :","code":["// Importer la contrainte Image pour valider les fichiers image","use Symfony\\Component\\Validator\\Constraints\\Image;","","// Ajout d'un champ de type fichier","->add('poster', FileType::class, [","    // Indique si le champ est lié à une propriété de l'entité","    'mapped' => false,","    // Champ requis ou non","    'required' => false,","    // Contraintes de validation pour le champ","    'constraints' => [","        new Image([","            'maxSize' => '10000k', // Taille maximale en kilo-octets","            'mimeTypes' => ['image/jpeg', 'image/png'], // Types MIME autorisés","            'mimeTypesMessage' => 'Please upload a valid image file', // Message d'erreur pour types MIME invalides","            'maxSizeMessage' => 'The file is too large, maximum size is 10MB' // Message d'erreur pour taille excessive","        ])","    ],","])"]}]},{"title":"SubmitType","commands":[{"label":"Ajotuer un bouton de soumission du formulaire :","code":["// Ajout d'un bouton de soumission de formulaire","->add('save', SubmitType::class, [/*votre_configuration*/])"]}]},{"title":"Label","commands":[{"label":"Ajouter un label","code":["->add('save', Votre_type::class, [","    'label' => 'Submit',","    ]","])"]}]},{"title":"Placeholder","commands":[{"label":"Ajouter un placeholder à un champ :","code":["->add('email', Votre_type::class, [","    'attr' => [","        'placeholder' => 'Enter your email', // Placeholder pour le champ","    ],","])"]}]},{"title":"Classe","commands":[{"label":"Ajouter une classe pour mettre en forme votre champ :","code":["->add('save', Votre_type::class, [","    'attr' => [","        'class' => 'btn btn-primary', // Classe CSS","    ],","])"]}]},{"title":"Help","commands":[{"label":"Ajouter une aide à un champ :","code":["->add('save', Votre_type::class, [","    'help' => 'Cliquez pour soumettre le formulaire',","])"]}]}]},{"title":"Utilisation de Twig","items":[{"title":"Afficher des variables","commands":[{"label":"Pour afficher le contenu d'une variable, Twig utilise la syntaxe `{{ }}`, autrement appelée les moustaches.","code":["{{ variable }}"]}]},{"title":"Utiliser les structures de controle","commands":[{"label":"Pour itérer sur des séquences, Twig propose la boucle for :","code":["{% for utilisateur in utilisateurs %}","  <p>{{ utilisateur.nom }}</p>","{% endfor %}"]},{"label":"Exemple complet pour afficher des box de cases différant par la couleur","code":["#[Route('/box', name: 'box')]","public function testBox(): Response {","    $colors = ['blue', 'red', 'pink', 'purple', 'green', 'orange'];","    return $this->render('test/box.html.twig', [","        'colors' => $colors","    ]);","}"]},{"label":"Exemple complet en Twig pour afficher des box de cases","code":["<div class='container d-flex justify-content-center'\"'>","    <div class=' d-flex gap-3 flex-wrap'>","        {% for color in colors %}","            <div","              class='test-color-box rounded'","              style='background-color: {{ color }}'>","              {{ loop.index }} - {{ color }}","            </div>","        {% endfor %}","    </div>","</div>"]}]},{"title":"Conditionner les vues","commands":[{"label":"Twig permet d'utiliser des conditions avec if :","code":["{% if utilisateur.actif %}","  <p>L'utilisateur est actif.</p>","{% else %}","  <p>L'utilisateur n'est pas actif.</p>","{% endif %}"]}]},{"title":"Utiliser les blocs","commands":[{"label":"Les blocs sont utilisés pour définir des sections de contenu qui peuvent être surchargées dans des templates étendus :","code":["{% block nomDuBloc %}","  Contenu par défaut.","{% endblock %}"]}]},{"title":"Utiliser les fonctions","commands":[{"label":"Twig dispose de fonctions intégrées pour réaliser des tâches courantes :","code":["{{ path('route_name') }}","<!-- Cette fonction génère l'URL d'une route spécifique. -->"]}]},{"title":"Effectuer un test","commands":[{"label":"Twig permet de réaliser des tests dans les conditions :","code":["{% if variable is defined %}","  <p>{{ variable }}</p>","{% endif %}"]}]},{"title":"Inclure des templates","commands":[{"label":"Pour inclure d'autres templates :","code":["{% include 'chemin/vers/template.twig' %}"]}]},{"title":"Hériter de templates","commands":[{"label":"Pour hériter d'un template parent :","code":["{% extends 'base.twig' %}"]}]}]},{"title":"Filtrage dans Twig","items":[{"title":"capitalize","commands":[{"label":"Convertit une chaîne en minuscules.","code":["{{ hello | capitalize }} <!-- Donne \"Hello\" -->"]}]},{"title":"date","commands":[{"label":"Formate une date ou une heure selon un format spécifié.","code":["{{ \"now\" | date(\"Y-m-d\") }} <!-- Donne 2024-06-21 -->"]}]},{"title":"default","commands":[{"label":"Fournit une valeur par défaut si la variable est undefined ou null.","code":["{{ variable|default(\"default value\") }}"]}]},{"title":"join","commands":[{"label":"Joint les éléments d'un tableau en une seule chaîne avec un séparateur.","code":["{{ [\"one\", \"two\", \"three\"] | join(\", \") }} <!-- Donne \"one, two, three\" -->"]}]},{"title":"keys","commands":[{"label":"Renvoie toutes les clés d'un tableau.","code":["{{ {\"name\": \"John\", \"age\": 25}|keys }}"]}]},{"title":"length","commands":[{"label":"Donne la longueur d'une chaîne ou le nombre d'éléments dans un tableau.","code":["{{ \"hello\"|length }} <!-- Donne 5 -->"]}]},{"title":"lower","commands":[{"label":"Convertit une chaîne en minuscules.","code":["{{ \"HELLO\" | lower }} <!-- Donne \"hello\" -->"]}]},{"title":"number_format","commands":[{"label":"Formate un nombre avec des séparateurs de milliers et un nombre spécifique de décimales.","code":["{{ 1000000.15 | number_format(2, '.', ',') }} <!-- Donne 1,000,000.15 -->"]}]},{"title":"reverse","commands":[{"label":"Inverse les éléments d'un tableau ou d'une chaîne.","code":["{{ \"abc\"|reverse }} <!-- Donne \"cba\" -->"]}]},{"title":"slice","commands":[{"label":"Extrait une sous-chaîne d'une chaîne, similaire à la fonction substr en PHP.","code":["{{ \"Hello\" | slice(1, 3) }} <!-- Donne \"ell\" -->"]}]},{"title":"title","commands":[{"label":"Met en majuscule la première lettre de chaque mot.","code":["{{ \"hello world\" | title }} <!-- Donne \"Hello World\" -->"]}]},{"title":"trim","commands":[{"label":"Supprime les espaces au début et à la fin d'une chaîne.","code":["{{ \"  hello  \" | trim }} <!-- Donne \"hello\" -->"]}]},{"title":"upper","commands":[{"label":"Convertit une chaîne en majuscules.","code":["{{ \"hello\" | upper }} <!-- Donne \"HELLO\" -->"]}]}]},{"title":"Doctrine DataFixtures et Faker","items":[{"title":"installer","commands":[{"label":"Installez le package Doctrine DataFixtures :","code":["composer require --dev orm-fixtures"]},{"label":"Installez le package Faker pour générer des données fictives :","code":["composer require fakerphp/faker"]}]},{"title":"Créer une classe de fixture","commands":[{"label":"Générez une classe de fixture pour peupler la base de données avec des données fictives :","code":["php bin/console make:fixture AppFixtures"]}]},{"title":"Exemple de classe de fixture","commands":[{"label":"Exemple simple de classe de fixture utilisant Faker :","code":["namespace App\\DataFixtures;","","use App\\Entity\\Product;","use Doctrine\\Bundle\\FixturesBundle\\Fixture;","use Doctrine\\Persistence\\ObjectManager;","use Faker\\Factory;","","class AppFixtures extends Fixture","{","    public function load(ObjectManager $manager)","    {","        $faker = Factory::create();","","        for ($i = 0; $i < 10; $i++) {","            $product = new Product();","            $product->setName($faker->word);","            $product->setPrice($faker->randomFloat(2, 10, 100));","            $product->setDescription($faker->sentence);","","            $manager->persist($product);","        }","","        $manager->flush();","    }","}"]}]},{"title":"Exécuter des fixtures","commands":[{"label":"Pour lancer la création des données, vous pouvez ajouer la fonction créée dans une fonction de controller, et consulter l'URL/route sur un nvaigateur."},{"label":"Ou vous pouvez les fixtures dans la base de données (A confirmer)","code":"php bin/console doctrine:fixtures:load"}]},{"title":"Gerer des références","commands":[{"label":"Utilisez des références pour créer des relations entre les entités dans les fixtures, dans AppFixtures :","code":"$this->addReference('product_1', $product);"},{"label":"ou dans une autre fixture :","code":"$product = $this->getReference('product_1');"}]},{"title":"Configurer des priorités","commands":[{"label":"Définissez l'ordre de chargement des fixtures en utilisant les priorités :","code":["use Doctrine\\Bundle\\FixturesBundle\\Fixture;","use Doctrine\\Common\\DataFixtures\\OrderedFixtureInterface;","","class ProductFixtures extends Fixture implements OrderedFixtureInterface","{","    public function getOrder()","    {","        return 1; // Priorité la plus haute","    }","}"]}]},{"title":"Utiliser les propriétés et les méthodes","commands":[{"label":"Générer un nom :","code":"$faker->name;"},{"label":"Générer une adresse :","code":"$faker->address;"},{"label":"Générer un texte :","code":"$faker->text;"},{"label":"Générer un email :","code":"$faker->email;"},{"label":"Générer un nombre aléatoire :","code":"$faker->randomNumber;"},{"label":"Générer une date :","code":"$faker->date;"},{"label":"Générer une URL d'image :","code":"$faker->imageUrl;"},{"label":"Générer un numéro de téléphone :","code":"$faker->phoneNumber;"},{"label":"Générer une entreprise :","code":"$faker->company;"},{"label":"Générer un titre de travail :","code":"$faker->jobTitle;"},{"label":"Générer un mot :","code":"$faker->word;"},{"label":"Générer un paragraphe :","code":"$faker->paragraph;"},{"label":"Générer une couleur hexadécimale :","code":"$faker->hexColor;"},{"label":"Générer une ville :","code":"$faker->city;"},{"label":"Générer un code postal :","code":"$faker->postcode;"},{"label":"Générer une latitude :","code":"$faker->latitude;"},{"label":"Générer une longitude :","code":"$faker->longitude;"},{"label":"Générer une URL :","code":"$faker->url;"},{"label":"Générer un texte avec une longueur spécifique :","code":"$faker->text(200);"},{"label":"Générer un utilisateur :","code":"$faker->userName;"},{"label":"Générer une phrase :","code":"$faker->sentence;"},{"label":"Générer un numéro de carte de crédit :","code":"$faker->creditCardNumber;"},{"label":"Générer une devise :","code":"$faker->currencyCode;"},{"label":"Générer un pays :","code":"$faker->country;"}]},{"title":"Utiliser des groupes de fixtures","commands":[{"label":"Chargez des groupes spécifiques de fixtures :","code":["php bin/console doctrine:fixtures:load --group=GroupName"]}]}]},{"title":"La gestion de la sécurité (En construction !)","items":[{"title":"Créer l’entité utilisateur","commands":[{"label":"Vous pouvez utiliser la commande pour générer l'entité utilisateur...","code":"php bin/console make:user"},{"label":"...ou avec Symfony CLI :","code":"symfony console make:user"},{"label":"Pour rajouter des propriétés à l'entité utilisateur, il vous suffit de taper la commande...","code":"php bin/console make:entity User"},{"label":"...ou avec Symfony CLI :","code":"symfony console make:entity User"}]},{"title":"Créer le système d’authentification","commands":[{"label":"Commandes pour générer le système d'authentification","code":"php bin/console make:auth"},{"label":"...ou avec Symfony CLI :","code":"symfony console make:auth"}]},{"title":"Créer le formulaire d’inscription","commands":[{"label":"Commandes pour générer le formulaire d'inscription","code":["symfony console make:registration-form"]}]},{"title":"Configurer security.yaml","commands":[{"label":"Configurer le hachage des mots de passe et les providers","code":["// Configuration de base dans security.yaml","security:","  password_hashers:","    Symfony\\Component\\Security\\Core\\User\\PasswordAuthenticatedUserInterface: 'auto'","  providers:","    app_user_provider:","      entity:","        class: App\\Entity\\User","        property: email"]},{"label":"Configurer les firewalls","code":["// Configuration des firewalls dans security.yaml","security:","  firewalls:","    dev:","      pattern: ^/(_(profiler|wdt)|css|images|js)/","      security: false","    main:","      lazy: true","      provider: app_user_provider"]}]},{"title":"Utiliser l'UserInterface","commands":[{"label":"Implémenter UserInterface dans l'entité utilisateur","code":["// L'entité doit implémenter UserInterface.","interface UserInterface {","  public function getUserIdentifier(): string;","  public function getRoles(): array;","  public function getSalt(); // Inutile aujourd'hui","  public function eraseCredentials();","}"]}]},{"title":"Hasher un mot de passe","commands":[{"label":"Implémenter PasswordAuthenticatedUserInterface pour hasher le mot de passe","code":["// L'entité doit implémenter PasswordAuthenticatedUserInterface.","interface PasswordAuthenticatedUserInterface {","  public function getPassword(): string;","}"]}]},{"title":"Configurer le système d’authentification","commands":[{"label":"Configurer l'authentification dans security.yaml","code":["// Configuration pour l'authentification.","security:","  firewalls:","    main:","      custom_authenticator: App\\Security\\AppAuthenticator","      logout:","        path: app_logout"]}]},{"title":"Contrôleur généré","commands":[{"label":"Contrôleur pour la connexion et la déconnexion","code":["// Route pour afficher le formulaire de connexion.","#[Route('/login', name: 'app_login')]","public function login(): Response {","  // Symfony intercepte la requête pour traiter le formulaire.","}","// Route pour la déconnexion.","#[Route('/logout', name: 'app_logout')]","public function logout(): void {","  // Symfony intercepte la requête pour déconnecter l'utilisateur.","}"]}]},{"title":"Fichier Twig généré","commands":[{"label":"Formulaire de connexion en Twig","code":["// Formulaire de connexion généré.","{% block body %}","  <form method=\"post\">","    <input type=\"text\" name=\"_username\" required>","    <input type=\"password\" name=\"_password\" required>","    <button type=\"submit\">Se connecter</button>","  </form>","{% endblock %}"]}]},{"title":"Authenticator","commands":[{"label":"Configurer l'Authenticator pour la connexion","code":["// Authenticator dans src/Security/AppAuthenticator.","public function onAuthenticationSuccess(Request $request, TokenInterface $token,","  string $firewallName): ?Response {","  if ($targetPath = $this->getTargetPath($request->getSession(), $firewallName)) {","    return new RedirectResponse($targetPath);","  }","  // Redirigez vers une route appropriée.","  throw new \\Exception('TODO: provide a valid redirect inside '.__FILE__);","}"]}]},{"title":"Créer le formulaire d’inscription","commands":[{"label":"Commandes pour générer le formulaire d'inscription","code":["// Génère le contrôleur, le fichier Twig, et le formulaire Symfony pour l'inscription.","symfony console make:registration-form"]}]},{"title":"Configurer le contrôleur d'inscription","commands":[{"label":"Configurer le contrôleur pour gérer l'inscription","code":["// Contrôleur pour afficher et traiter l'inscription.","public function register(Request $request, UserPasswordHasherInterface $passwordHasher): Response {","  $user = new User();","  $form = $this->createForm(RegistrationFormType::class, $user);","  $form->handleRequest($request);","  if ($form->isSubmitted() && $form->isValid()) {","    // Hachage du mot de passe","    $user->setPassword(","      $passwordHasher->hashPassword(","        $user,","        $form->get('plainPassword')->getData()","      )","    );","    // Enregistrement de l'utilisateur","    $entityManager = $this->getDoctrine()->getManager();","    $entityManager->persist($user);","    $entityManager->flush();","    return $this->redirectToRoute('home');","  }","  return $this->render('registration/register.html.twig', [","    'registrationForm' => $form->createView(),","  ]);","}"]}]},{"title":"Accéder à l’utilisateur connecté","commands":[{"label":"Accéder à l'utilisateur dans un contrôleur","code":["// Récupère l'utilisateur connecté.","$user = $this->getUser();"]},{"label":"Accéder à l'utilisateur dans Twig","code":["// Affiche l'utilisateur connecté dans un template Twig.","{{ app.user }}"]}]},{"title":"Les rôles","commands":[{"label":"Les rôles disponibles dans Symfony","code":["// Les rôles sont des chaînes de caractères commençant par ROLE_.","// Ils peuvent être définis dans l'entité utilisateur."]}]},{"title":"Restreindre l’accès à une page","commands":[{"label":"Restreindre l'accès à une page dans un contrôleur","code":["// Utilisez denyAccessUnlessGranted pour restreindre l'accès.","public function adminDashboard(): Response {","  $this->denyAccessUnlessGranted('ROLE_ADMIN');","  return $this->render('admin/dashboard.html.twig');","}"]},{"label":"Restreindre l'accès à une page avec des attributs","code":["// Utilisez IsGranted pour restreindre l'accès avec des attributs.","#[IsGranted('ROLE_ADMIN')]","public function adminDashboard(): Response {","  return $this->render('admin/dashboard.html.twig');","}"]},{"label":"Restreindre l'accès dans security.yaml","code":["// Utilisez access_control dans security.yaml pour restreindre l'accès.","security:","  access_control:","    - { path: ^/admin, roles: ROLE_ADMIN }"]}]},{"title":"Vérifier un rôle dans Twig","commands":[{"label":"Vérifier un rôle dans un template Twig","code":["// Vérifiez si l'utilisateur est connecté.","{% if app.user %}","  <a href=\"{{ path('app_logout') }}\">Déconnexion</a>","{% endif %}","// Vérifiez si l'utilisateur a un rôle spécifique.","{% if is_granted('ROLE_ADMIN') %}","  <a href=\"{{ path('admin_dashboard') }}\">Back-office</a>","{% endif %}"]}]},{"title":"Configurer la hiérarchie des rôles","commands":[{"label":"Vous pouvez définir la hiérarchie des rôles dans security.yaml. Un rôle peut hériter de toutes les permissions d’un autre.","code":["security:","  role_hierarchy:","    ROLE_ADMIN: ROLE_USER","    ROLE_SUPER_ADMIN: ROLE_ADMIN"]}]},{"title":"Configurer le \"Remember Me\"","commands":[{"label":"Configurer la fonctionnalité 'Se souvenir de moi' dans security.yaml","code":["security:","  firewalls:","    main:","      remember_me:","        secret: '%kernel.secret%'","        lifetime: 604800 // 1 semaine en secondes","        path: /"]},{"label":"Ajouter RememberMeBadge dans l'Authenticator","code":["// Ajoutez RememberMeBadge dans authenticate().","public function authenticate(Request $request): PassportInterface {","  return new Passport(","    new UserBadge($email),","    new PasswordCredentials($request->request->get('password', '')),","    [","      new CsrfTokenBadge('authenticate', $request->get('_csrf_token')),","      new RememberMeBadge()","    ]","  );","}"]}]},{"title":"Récupérer un mot de passe","commands":[{"label":"Installer le module pour récupération de mot de passe","code":["symfony composer require symfonycasts/reset-password-bundle"]},{"label":"Générer le système de récupération de mot de passe","code":["symfony console make:reset-password"]}]}]}]}